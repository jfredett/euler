> module P58 where

===============================================================================
Starting with 1 and spiralling anticlockwise in the following way, a square
spiral with side length 7 is formed.

37 36 35 34 33 32 31
38 17 16 15 14 13 30
39 18  5  4  3 12 29
40 19  6  1  2 11 28
41 20  7  8  9 10 27
42 21 22 23 24 25 26
43 44 45 46 47 48 49

It is interesting to note that the odd squares lie along the bottom right diagonal,
but what is more interesting is that 8 out of the 13 numbers lying along both 
diagonals are prime; that is, a ratio of 8/13  62%.

If one complete new layer is wrapped around the spiral above, a square spiral 
with side length 9 will be formed. If this process is continued, what is the 
side length of the square spiral for which the ratio of primes along both diagonals 
first falls below 10%?
===============================================================================

Hey! We've seen these before! In problem twenty-eight, lets import them

Unfortunately, the import system is being mean, so I'm just going to reproduce the things we need here

> i, ii :: Integer -> Integer
> i n = n*n
> ii n = (i n) - (n - 1) 

In problem 28, we noted that (i,iii) and (ii,iv) are actually the same function, just shifted by an argument.

What we want to do here is find two things:

a function for generating the diagonals.
a function for determining the number of primes generated by the diagonals.

So, first, lets come up with a way to enumerate all the items on the diagonals. While we're at it
we can filter for primes, giving us P(f) for free.

> diagonalEntrys :: [Integer]
> diagonalEntrys = [i a, ii a | a <- [3,5..]]

We know that the number of elements in the square is n^2, so what we need to do is create a lazy algorithm which runs until it finds a n^2 such that the size of the set of prime diagonal entrys less than n^2 (call it p), is less than n^2/10


> solvefiftyeight :: Integer
> solvefiftyeight = 0

