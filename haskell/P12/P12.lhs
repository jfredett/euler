> module P12.P12 where
> import PELib.HaskellForMaths.ArithmeticFunctions
> import PELib.PELib

===============================================================================
Problem 12
08 March 2002

The sequence of triangle numbers is generated by adding the natural numbers. So 
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms
would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that the 7th triangle number, 28, is the first triangle number to 
have over five divisors.

Which is the first triangle number to have over five-hundred divisors?
===============================================================================

Easy, lets create a infinite list of triangle numbers

> triangleNumbers :: [Integer]
> triangleNumbers = [triagonalNumber k | k <- [1..]]

Easy, now lets find a way to take those numbers, and figure out how many divisors it has. 

all we need to do is dropWhile the numDivisors is less than 500

> solvetwelve :: [Integer]
> solvetwelve = (take 1 (dropWhile (\ a -> numDivisors a < 500) triangleNumbers))

Done.
